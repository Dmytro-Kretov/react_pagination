{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","currentPage","pagesToShow","onPageChange","arrowLeftDisable","arrowRightDisable","length","className","cn","disabled","href","onClick","map","page","active","items","from","to","numbers","n","push","getNumbers","options","pages","App","useState","selected","setSelected","setCurrentPage","array","number","slice","getPagesLength","itemsToShow","current","itemsPerPage","startIndex","endIndex","getItemsLength","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAmBH,IAAgBC,EAAY,GAC/CG,EAAoBJ,IAAgBC,EAAYA,EAAYI,OAAS,GAS3E,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAAUL,IAFd,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EAAmB,OAAS,QAC3CO,QApBgB,WACtBR,EAAaF,EAAc,IAcvB,oBAUDC,EAAYU,KAAI,SAACC,GAAD,OACf,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQb,IAAgBY,IAF5B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBACEL,EAAoB,OAAS,QAE/BM,QAlDiB,WACvBR,EAAaF,EAAc,IA0CvB,wBCvDFc,ECRC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDCKG,CAAW,EAAG,IAEtBC,EAAuB,CAAC,EAAG,EAAG,GAAI,IAClCC,EAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAoChE,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoB2B,EAApB,KAMM1B,EA1CR,SAAwB2B,EAAoBC,GAC1C,OAAQA,GACN,KAAK,EACH,OAAOD,EAAME,MAAM,EAAG,GACxB,KAAK,GACH,OAAOF,EAAME,MAAM,EAAG,GACxB,KAAK,GACH,OAAOF,EAAME,MAAM,EAAG,GACxB,QACE,OAAOF,GAiCSG,CAAeT,EAAOG,GACpCO,EA9BR,SACEC,EACAC,EACAN,GAGA,IAAMO,EAAaF,EAAUC,EAAeA,EACtCE,EAAWD,EAAaD,EAU1B,OAAON,EAAME,MAAMK,EAAYC,GAafC,CAAerC,EAAayB,EAAUX,GAE1D,OACE,sBAAKR,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCgC,EAAY,GAD7C,cACqDA,EAAYA,EAAY3B,OAAS,GADtF,aAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgC,GAAG,kBACHhC,UAAU,eACViC,MAAOd,EACPe,SAvBW,SAACC,GACpBf,GAAae,EAAMC,OAAOH,OAC1BZ,EAAe,IAgBT,SAOGN,EAAQV,KAAI,SAACgC,GAAD,OACX,wBAEEJ,MAAOI,EAFT,SAIGA,GAHIA,UASb,uBAAOC,QAAQ,kBAAkBtC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEN,YAAaA,EACbC,YAAaA,EACbC,aAAc,SAACU,GAAD,OAAUe,EAAef,MAEzC,6BACGoB,EAAYrB,KAAI,SAAAkC,GAAI,OACnB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YEjGjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7d1664d5.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  currentPage: number,\n  pagesToShow:number[],\n  onPageChange: React.Dispatch<number>,\n}\n\nexport const Pagination:React.FC<Props> = ({\n  currentPage,\n  pagesToShow,\n  onPageChange,\n}) => {\n  const arrowLeftDisable = currentPage === pagesToShow[0];\n  const arrowRightDisable = currentPage === pagesToShow[pagesToShow.length - 1];\n  const handleClickLeft = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  const handleClickRight = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: arrowLeftDisable,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={arrowLeftDisable ? 'true' : 'false'}\n          onClick={handleClickLeft}\n        >\n          «\n        </a>\n      </li>\n      {pagesToShow.map((page) => (\n        <li\n          className={cn('page-item', {\n            active: currentPage === page,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', {\n          disabled: arrowRightDisable,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={\n            arrowRightDisable ? 'true' : 'false'\n          }\n          onClick={handleClickRight}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { ArrayNumber } from './Types/ArrayNumber';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42);\n\nconst options: ArrayNumber = [3, 5, 10, 20];\nconst pages: ArrayNumber = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nfunction getPagesLength(array: ArrayNumber, number: number): ArrayNumber {\n  switch (number) {\n    case 5:\n      return array.slice(0, 9);\n    case 10:\n      return array.slice(0, 5);\n    case 20:\n      return array.slice(0, 3);\n    default:\n      return array;\n  }\n}\n\nfunction getItemsLength(\n  current:number,\n  itemsPerPage: number,\n  array: ArrayNumber,\n)\n  : ArrayNumber {\n  const startIndex = current * itemsPerPage - itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  switch (itemsPerPage) {\n    case 3:\n      return array.slice(startIndex, endIndex);\n    case 5:\n      return array.slice(startIndex, endIndex);\n    case 10:\n      return array.slice(startIndex, endIndex);\n    default:\n      return array.slice(startIndex, endIndex);\n  }\n}\n\nexport const App: React.FC = () => {\n  const [selected, setSelected] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelected(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const pagesToShow = getPagesLength(pages, selected);\n  const itemsToShow = getItemsLength(currentPage, selected, items);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsToShow[0]} - ${itemsToShow[itemsToShow.length - 1]} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selected}\n            onChange={handleChange}\n          >\n            {options.map((option) => (\n              <option\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={currentPage}\n        pagesToShow={pagesToShow}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <ul>\n        {itemsToShow.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}